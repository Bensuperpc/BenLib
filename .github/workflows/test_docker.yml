name: Build test docker

on:
  push:
    branches: 
      - master
    paths-ignore:
      - 'build/**'
      - '**.md'
      - 'appveyor.yml'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'build/**'
      - '**.md'
      - 'appveyor.yml'

jobs:
  build:
    name: Docker ${{ matrix.container.name }} ${{ matrix.arch.name }} ${{ matrix.compiler.name }} ${{ matrix.config.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        container:
        - { name: "Ubuntu 20.04",    image: "ubuntu:20.04", container_name: ubuntu_20_04, dockerfile: config_docker/Dockerfile_ubuntu }
        - { name: "Ubuntu 20.10",    image: "ubuntu:20.10", container_name: ubuntu_20_10, dockerfile: config_docker/Dockerfile_ubuntu }
        - { name: "Ubuntu 21.04",    image: "ubuntu:21.04", container_name: ubuntu_21_04, dockerfile: config_docker/Dockerfile_ubuntu_21.04 }
        - { name: "archlinux",       image: "archlinux",    container_name: archlinux,    dockerfile: config_docker/Dockerfile_archlinux }
      
        config:
        - { name: Release, flags: -DCMAKE_BUILD_TYPE=Release }
        - { name: MinSizeRel, flags: -DCMAKE_BUILD_TYPE=MinSizeRel }
        - { name: Debug, flags: -DCMAKE_BUILD_TYPE=Debug }
        - { name: Coverage, flags: -DCMAKE_BUILD_TYPE=Coverage }

        compiler:
          - { name: GCC }
          - { name: Clang }
        
        arch:
          - { name: x86_64 }
          #- { name: aarch64 }

        #- { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        #- { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
    - name: "📥 Checkout Code"
      uses: actions/checkout@v2.2.0
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: "📥 Install Docker"
      run: sudo apt-get update && sudo apt-get remove docker docker-engine docker.io containerd runc && sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
    
    - name: "📥 Install Docker"
      run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: "📥 Install Docker"
      run: sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io
      


    - name: "🛠️ Build container"
      run: sudo docker build -t ben_lib_builder_${{ matrix.container.container_name }} -f ${{ matrix.container.dockerfile }} . --build-arg UID=$(id -u) --build-arg GID=$(id -g) --build-arg IMAGE=${{ matrix.container.image }}

    - name: "🏃‍♀️ Run container"
      run: sudo docker run --rm --name ben_lib_builder_tmp_${{ matrix.container.container_name }} --mount type=bind,source="$(pwd)",destination=/usr/src/app --mount type=tmpfs,destination=/usr/src/app/build,tmpfs-size=128m ben_lib_builder_${{ matrix.container.container_name }}